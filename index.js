// ### NORMAL level

// #### Task 1 üíª

// const getSum = function (b) {
// 	let sum = 0
// 	for (i = 0; i <= b; i++) {
// 		sum = sum + i
// 	} return sum
// } 

// console.log(getSum(100))

// #### Task 2 üíª

// const overCharge = function (loanBody, interest, period) {
// 	let monthlyPayment = Math.round(loanBody * (interest/12/100*((1+interest/12/100)**(period*12))) / (((1 + interest/12/100)**(period*12)-1)))
// 	console.log(`–µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ ${monthlyPayment}`)
// 	return monthlyPayment*12*period - loanBody 
// } 

// console.log(overCharge(10000, 17, 5))

// #### Task 3 üíª

// const trimString = function (str, strStart, strEnd) {
// 	str = str.split(" ")
// 	strStartIndex = 0
// 	strStartIndex = 0
// 	for (i = 0; i < str.length; i++) {
// 		if (str[i].includes(strStart)) {
// 			strStartIndex = i
// 		} else if (str[i].includes(strEnd)) {
// 			strEndIndex = i
// 		}
// 	} return str.slice(strStartIndex++, strEndIndex)
// } 

// console.log(trimString("–ß—Ç–æ-—Ç–æ –≤—ã–¥–∞–≤–∞–ª–æ –≤ –®—Ç–∏—Ä–ª–∏—Ü–µ —Å–æ–≤–µ—Ç—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ–¥—á–∏–∫–∞. –ù–µ —Ç–æ –º—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å, –Ω–µ —Ç–æ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ—Ö–æ–¥–∫–∞, –Ω–µ —Ç–æ –≤–æ–ª–æ—á–∞—â–∏–π—Å—è –∑–∞ –Ω–∏–º –ø–∞—Ä–∞—à—é—Ç.", "–≤", "–ø–∞—Ä–∞—à—é—Ç."))

// #### Task 4 üíª

// const getSumNumbers = function (a) {
// 	a = String(a).split("")
// 	let sum = 0
// 	for (i=0; i < a.length; i++){
// 		sum = sum + Number(a[i]) 
// 	} return sum
// } 

// console.log(getSumNumbers(2022)) 

// #### Task 5 üíª

// const getSum = function (a, b) {
// 	let sum = 0
// 	for (i = a; i <= b; i++) {
// 		sum = sum + i
// 	} return sum
// } 

// console.log(getSum(1, 0)) // 1 + 0 = 1
// console.log(getSum(1, 2)) // 1 + 2 = 3
// console.log(getSum(0, 1)) // 0 + 1 = 1
// console.log(getSum(1, 1)) // 1 Since both are same
// console.log(getSum(-1, 0))// -1 + 0 = -1
// console.log(getSum(-1, 2))// -1 + 0 + 1 + 2 = 2

// #### Task 6 üíª

// const foo = () => {return console.log(foo.name)}
// const boo = () => {return console.log(boo.name)}

// const fooboo = function (condition, foo, boo) {
// 	if (!!condition) {
// 		return foo()
// 	} else return boo()
// } 

// fooboo(false, foo, boo)

// ### ADVANCED level

// #### Task 1 üë®‚Äçüè´ 

// const triangle = function(a, b, c) {
// 	if (a > 0 && b > 0 && c > 0) {
// 		if (a + b > c && a + c > b && b + c > a) {
// 		return true
// 		} else return false
// 	} else return alert("–î–ª–∏–Ω–∞ —Å—Ç–æ—Ä–æ–Ω—ã —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π")
// }
// console.log(triangle(-1, 15, 15))

// #### Task 2 üë®‚Äçüè´ 


	let budget = Number(prompt("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–∞—à–µ–≥–æ –±—é–¥–∂–µ—Ç–∞")) // –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –±—é–¥–∂–µ—Ç
	let currency = false // –¥–∞–ª–µ–µ —É—Ç–æ—á–Ω—è–µ –≤–∞–ª—é—Ç—É –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π
	if (currency = confirm("–í—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π –≤ —Ä—É–±–ª—è—Ö?")) {
			currency = "RUB"
		}	else if (currency = confirm("–í—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö?")){
			currency = "USD"
		}	else if	(currency = confirm("–í—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π –≤ –µ–≤—Ä–æ?")){
			currency = "EUR"} else {
				currency = "RUB";
				budget = Number(prompt("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–∞—à–µ–≥–æ –±—é–¥–∂–µ—Ç–∞ –≤ —Ä—É–±–ª—è—Ö"))
			}
	
	const phonePriceRUB = 800 //–∑–∞–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ü–µ–Ω, –ù–î–° –∏ –∫—É—Ä—Å–æ–≤
	const casePriceRUB = 20
	const taxRateVAT = 0.2
	let	exchangeRateEUR = 3
	let	exchangeRateUSD = 2.8

	let bill = {} //—Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö 
	let purchasePrice = 0
	let budgetLeft = 0
	let purchaseQuantity = 0

	
	const purchasePriceCalc = function ()	{if (currency === "RUB") {for (let i = 1; purchasePrice <= budget; i++) { //—Ä–∞—Å—á–µ—Ç —É—á–∏—Ç—ã–≤–∞–µ—Ç –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã 
		purchasePrice = Number(((1+taxRateVAT)*(phonePriceRUB + casePriceRUB)*i).toFixed(2)) //–æ–∫—Ä—É–≥–ª—è–µ–º —Å—É–º–º—É —á–µ–∫–∞ –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
		purchaseQuantity = i
	}} else if (currency === "EUR") {for (let i = 1; purchasePrice <= budget; i++) {
		purchasePrice = Number(((1+taxRateVAT)*(phonePriceRUB/exchangeRateEUR + casePriceRUB/exchangeRateEUR)*i).toFixed(2))
		purchaseQuantity = i
	}} else {for (let i = 1; purchasePrice <= budget; i++) {
		purchasePrice = Number(((1+taxRateVAT)*(phonePriceRUB/exchangeRateUSD + casePriceRUB/exchangeRateUSD)*i).toFixed(2))
		purchaseQuantity = i
	}}
	purchasePrice = Number(((1+taxRateVAT)*(phonePriceRUB/exchangeRateEUR + casePriceRUB/exchangeRateEUR)*purchaseQuantity).toFixed(2))
	budgetLeft = Number((budget - purchasePrice).toFixed(2))

	return bill = { //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç
		purchasePrice: purchasePrice,
		budgetLeft: budgetLeft,
		purchaseQuantity: purchaseQuantity
	}
}

	bill = purchasePriceCalc() //–≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–ª—é—á–∏ –æ–±—ä–µ–∫—Ç–∞ 

	if (bill[purchaseQuantity] === 0) { // –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–æ–∂–µ—Ç –ª–∏ —á–µ–ª–æ–≤–µ–∫ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É
		alert("–í–∞—à –±—é–¥–∂–µ—Ç –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–≤–µ—Ä—à–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–π –ø–æ–∫—É–ø–∫–∏")
	} else {
		alert(`–° –≤–∞—à–∏–º –±—é–¥–∂–µ—Ç–æ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä —Å–º–∞—Ä—Ç—Ñ–æ–Ω+—á–µ—Ö–æ–ª: ${purchaseQuantity}. –°—É–º–º–∞ —á–µ–∫–∞ —Å —É—á–µ—Ç–æ–º –ù–î–° —Å–æ—Å—Ç–∞–≤–∏—Ç: ${purchasePrice}${currency}. –û—Å—Ç–∞—Ç–æ–∫ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω ${budgetLeft}${currency}`)
	}

	console.log(budget)
	console.log(currency)
	console.log(purchasePriceCalc())

// #### Task 3 üë®‚Äçüè´

// const chocolate = function(n, m) {
// 	let numBreaks = 0
// 	if (n > 0 && m > 0 && n % 1 === 0 && m % 1 === 0) {
// 		for (i = 1; i < n * m; i++) {
// 			numBreaks += 1 
// 		}
// 	} else alert("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞")
// 	return alert (`–î–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–ª–∏—Ç–∫–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è ${numBreaks} –Ω–∞–¥–ª–æ–º–æ–≤`)
// }
// console.log(chocolate(NaN, NaN))

// #### Codewars

// 1. https://www.codewars.com/kata/55a5befdf16499bffb00007b

// function add(a,b){
// 	return a + b
// }

// function divide(a,b){
// 	return a / b
// }

// function multiply(a,b){
// 	return a * b
// }

// function mod(a,b){
// 	return a % b
// }
 
// function exponent(a,b){
// 	return a ** b
// }
	
// function subt(a,b){
// 	return a - b
// }

// 2. https://www.codewars.com/kata/559ac78160f0be07c200005a

// function nameShuffler(str){
//   let arr = str.split(" ").reverse()
//   return arr.join(" ")
// }

// 3. https://www.codewars.com/kata/50654ddff44f800200000007

// function solution(a, b){
//   if (a.length > b.length) {
//     return b + a + b
//   }else return a + b + a
// }
