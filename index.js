// ### NORMAL level

// #### Task 1 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const colors = ['red', 'green', 'blue']
// ```

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –¥–ª–∏–Ω—É.

const colors = ['red', 'green', 'blue']
console.log(colors.length)

// #### Task 2 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const animals = ['monkey', 'dog', 'cat']
// ```

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–ª–∏–Ω–Ω—ã.

const animals = ['monkey', 'dog', 'cat']
console.log(animals[animals.length-1])

// #### Task 3 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const numbers = [5, 43, 63, 23, 90]
// ```

// –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// > –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏.

const numbers = [5, 43, 63, 23, 90]
const numbersCopy = [...numbers]
// for(i=1; i<=numbers.length; i++){
// 	numbersCopy.pop()
// }
// console.log(numbersCopy) 

for(i=1; i<=numbers.length; i++){
	numbersCopy.shift()
}
console.log(numbersCopy)

// #### Task 4 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const students = ['Polina', 'Dasha', 'Masha']
// ```

// + –£–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Borya`.
// + –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Andrey`.
// + –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.

const students = ['Polina', 'Dasha', 'Masha']
students.pop()
students.push("Borya")
students.shift()
students.unshift("Andrey")
console.log(students)

// #### Task 5 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const cats = ['Gachito', 'Tom', 'Batman']
// ```

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞. –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª **`for`**, –∑–∞—Ç–µ–º **`for of`**.

const cats = ['Gachito', 'Tom', 'Batman']

for (i = 0; i < cats.length; i++) {
	console.log(cats[i])
}

for (let item of cats) {
	console.log(item)
}

// #### Task 6 üñ•

// ```javascript
//     const evenNumbers = [2, 4, 6, 8, 10]
//     const oddNumbers = [1, 3, 5, 7, 9]
// ```

// + –°–æ–µ–¥–∏–Ω–∏—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –≤ –æ–¥–∏–Ω.
// + –í –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —á–∏—Å–ª–∞ **`8`**

const oddNumbers = [1, 3, 5, 7, 9]
const evenNumbers = [2, 4, 6, 8, 10]

const combinedArray = oddNumbers.concat(evenNumbers)
console.log(combinedArray)
console.log(combinedArray.findIndex((el) => el === 8))

// #### Task 7 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const binary = [0, 0, 0, 0]
// ```
 
// + –ù–∞—à –±–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–ø–æ–ª–Ω—ã–π, –≤ –Ω–µ–º —è–≤–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥–∏–Ω–∏—Ü.
// + –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É.

// > [0, 0, 0, 0] -> '0101010'

const binary = [0, 0, 0, 0]

const binaryString = binary.join(1)
console.log(binaryString)

// ### ADVANCED level

// > –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª—ã **`for`** –∏–ª–∏ **`for of`**

// #### Task 1 üë®‚Äçüè´

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.

const newFucntion = function (input) {
	const inputArr = input.split("")
	console.log(inputArr)
	const inputArrReversed = [...inputArr].reverse()
	console.log(inputArrReversed)
	for (i = 0; i < inputArr.length; i++) {
		if (inputArr[i] !== inputArrReversed[i]) {
			return false
		} else return true
	} 
} 

console.log(newFucntion("egor"))


// #### Task 2 üë®‚Äçüè´

// ```javascript
//     const matrix = [
//         [12, 98, 78, 65, 23],
//         [54, 76, 98, 43, 65],
//         [13, 324, 65, 312],
//         [9092, 22, 45, 90000],
//     ]
// ```

// > –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –≤ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.

const matrix = [
	[12, 98, 78, 65, 23],
	[54, 76, 98, 43, 65],
	[13, 324, 65, 312],
	[9092, 22, 45, 90000],
]

const joinedMatrix = matrix.join().split(",") //–¥–µ–ª–∞–µ–º –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–º
console.log(joinedMatrix)
console.log(matrix)

const arevageNumber = function(array) {
	let sum = 0
	for (item of array) {
		sum = sum + item 
	}
	return sum/joinedMatrix.length
}

console.log(arevageNumber(joinedMatrix))

// #### Task 3 üë®‚Äçüè´

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//    const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4]
// ```

// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞, –≤ –æ–¥–∏–Ω –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∞—è 0, –≤ –¥—Ä—É–≥–æ–π –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ. –û–±–∞ –º–∞—Å—Å–∏–≤–∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å. 

const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4]

const positiveNumbers = [...mixedNumbers].filter((el) => el >= 0)
console.log(positiveNumbers)
const negativeNumbers = [...mixedNumbers].filter((el) => el < 0)
console.log(negativeNumbers)


// #### Task 4 üë®‚Äçüè´

// –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω–Ω–æ–π –Ω–µ –º–µ–Ω–µ–µ 5, –∏–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. –î–∞–ª–µ–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç –≤—Å–µ —á–∏—Å–ª–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –≤–æ–∑–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫—É–± –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤. –í –∫–æ–Ω—Ü–µ –≤—ã–≤–µ—Å—Ç–∏ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å.

const firstRandomArray = [Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*10)]

console.log(firstRandomArray)

const secondRandomArray = [...firstRandomArray].map((el) => el**3)

console.log(secondRandomArray)


#### Task

1. https://www.codewars.com/kata/57f781872e3d8ca2a000007e

function maps(x){
  return x.map(el => el*2)
}

2. https://www.codewars.com/kata/5715eaedb436cf5606000381

function positiveSum(arr) {
  return arr.reduce(((total, el) => el > 0 ? total+el : total),0)
}

3. https://www.codewars.com/kata/57eadb7ecd143f4c9c0000a3

function abbrevName(name){
  let arr = name.split(" ")
  return `${arr[0][0].toUpperCase()}.${arr[1][0].toUpperCase()}`}